import React from "react";
import RenderLocationFields from "../RenderLocationFields";

const CommonFields = ({ formData, handleChange, handleFileChange }) => (
    <>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
                <label className="block text-gray-700">T√≠tulo:</label>
                <input
                    type="text"
                    name="title"
                    value={formData.title}
                    onChange={handleChange}
                    className="w-full border p-2 rounded"
                    placeholder="Nombre de negocio, servicio, negocio o producto"
                    required
                />
            </div>
            <div>
                <label className="block text-gray-700">N√∫mero de contacto:</label>
                <input
                    type="text"
                    name="contactNumber"
                    maxLength="9"
                    value={formData.contactNumber}
                    onChange={handleChange}
                    className="w-full border p-2 rounded"
                    placeholder="Ingrese un n√∫mero de 9 d√≠gitos"
                    required
                />
            </div>
        </div>
        
        <div>
            <label className="block text-gray-700">Categor√≠a:</label>
            <select
                name="category"
                value={formData.category}
                onChange={handleChange}
                className="w-full border p-2 rounded"
                required
            >
                   <option value="">Seleccionar categor√≠a</option>
                   {[
                       { 
                           label: "üè† Bienes Ra√≠ces y Alquiler", 
                           options: ["Alquilo", "Bienes Ra√≠ces", "Lugares", "Garajes", "Local de eventos", "Alquiler de Ropa de Baile", "Alquiler de Ternos/Vestidos"]
                       },
                       { 
                           label: "üõçÔ∏è Compra y Venta", 
                           options: ["Venta", "Remates", "Comida", "Bodegas", "Minimarket", "Restaurante"]
                       },
                       { 
                           label: "üë∑‚Äç‚ôÇÔ∏è Trabajo y Profesiones", 
                           options: [
                               "Empleo", "Negocio", "Servicios", "Profesores", "Ingenieros", "M√©dico Cirujano", "Psic√≥logo", "Electricista", "Plomero", "Mec√°nico", "Carpintero", 
                               "Pintores", "Soldador", "Taxista", "Transportistas", "Masajista", "Abogados", "Administradores", "Antrop√≥logo", "Archiv√≥logo", "Arquitecto", 
                               "Bibliotec√≥logo", "Bi√≥logo", "Bot√°nico", "Cient√≠ficos", "Computista", "Contador", "Ec√≥logo", "Economista", "Editor", "Fil√≥logos", "F√≠sico", "Ge√≥grafo", 
                               "Impresor", "Jornalero", "Matem√°tico", "Metal√∫rgico", "Obrero", "Paleont√≥logo", "Periodista", "Polit√≥logo", "Psicoanalista", "Qu√≠mico", "Radi√≥logo", 
                               "Soci√≥logo", "T√©cnico de sonido", "Traductores", "Desarrollador de Software", "Dise√±ador Gr√°fico", "Analista de Datos", "Programador", "Profesional"
                           ]
                       },
                       { 
                           label: "ü©∫ Salud y Bienestar", 
                           options: ["Salud", "M√©dico", "Enfermero", "Farmac√≥logo", "Param√©dico", "Masajista", "Fisioterapeuta", "Nutricionista", "Veterinaria", "Curanderos"]
                       },
                       { 
                           label: "‚öΩ Deporte y Entretenimiento", 
                           options: ["Deporte", "Entretenimiento", "Cancha Deportiva", "M√∫sica", "Animadores", "Entrenadores", "Payasos", "Instructor de Yoga"]
                       },
                       { 
                           label: "üé® Arte y Fotograf√≠a", 
                           options: ["Foto y Video", "Fot√≥grafo", "Escultor", "Artesano", "Artistas", "Tejedoras", "Dise√±ador de Moda", "Bordados"]
                       },
                       { 
                           label: "üçΩÔ∏è Comida y Gastronom√≠a", 
                           options: ["Comida", "Carnicero", "Cocinero", "Frutera", "Panadero", "Repartidor de comida", "Barista", "Chef"]
                       },
                       { 
                           label: "üöó Movilidad y Transporte", 
                           options: ["Transporte", "Mudanzas", "Transporte de carga", "Taxista", "Chofer de cami√≥n", "Expresos", "Colectivos"]
                       },
                       { 
                           label: "üåæ Agricultura y Ganader√≠a", 
                           options: ["Agricultura", "Acuicultura", "Ganader√≠a", "Pastor ganadero", "Pe√≥n de campo", "Lechero", "Le√±ador"]
                       },
                       { 
                           label: "üé≠ Eventos y Tradiciones", 
                           options: ["Eventos", "Tradici√≥n", "Maestro de Ceremonia", "Locutores", "Organizador de Eventos"]
                       },
                       { 
                           label: "üõ†Ô∏è Servicios Generales", 
                           options: ["Aseadora", "Barbero", "Barrendero", "Cerrajero", "Electricista", "Electr√≥nico", "Fontanero", "Lavanderas", "Limpiavidrios", "Mec√°nico", "Mudanzas", 
                                     "Peluquero", "Plomero", "Repartidor", "Sastre", "Secretaria", "Seguridad", "Soldador", "Sonido", "Tornero", "Vigilante", "Jardinero", "Instalador de Paneles Solares", "Peluquer√≠a"]
                       },
                       { 
                           label: "üíº Negocios y Finanzas", 
                           options: ["Negocio", "Abastecimiento", "Finanzas"]
                       },
                       { 
                           label: "üíª Tecnolog√≠a e Inform√°tica", 
                           options: ["Desarrollador de Software", "Tecnolog√≠a", "Programador"]
                       },
                       { 
                           label: "üõê Otros", 
                           options: ["Necesito", "Busco", "Donaciones", "Espiritualidad", "Turismo", "Otros"]
                       }
                   ].map(group => (
                        <optgroup key={group.label} label={group.label}>
                        {group.options.map(option => (
                            <option key={option} value={option}>{option}</option>
                        ))}
                    </optgroup>
                ))}
            </select>
        </div>

        <div>
            <label className="block text-gray-700">Descripci√≥n:</label>
            <textarea
                name="description"
                value={formData.description}
                onChange={handleChange}
                className="w-full border p-2 rounded"
                placeholder="Pon todo lo que se necesita sobre tu negocio, servicio, negocio o producto, mas ayuda en sugenencias abajo"
                required
            ></textarea>
        </div>
        
        <RenderLocationFields formData={formData} handleChange={handleChange} />
        
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
                <label className="block text-gray-700">Costo:</label>
                <div className="flex gap-2">
                    <input
                        type="number"
                        name="cost"
                        value={formData.cost || ""}
                        onChange={handleChange}
                        min="0"
                        placeholder="Ingresa costos"
                        className="w-full border p-2 rounded"
                        
                    />
                    <select
                        name="currency"
                        value={formData.currency || "Soles"}
                        onChange={handleChange}
                        className="border p-2 rounded"
                    >
                        <option value="Soles">Soles</option>
                        <option value="Dollars">Dolares</option>
                    </select>
                </div>
            </div>
            <div>
                <label className="block text-gray-700">M√©todo de pagos:</label>
                <input
                    type="text"
                    name="paymentMethods"
                    value={formData.paymentMethods || ""}
                    onChange={handleChange}
                    className="w-full border p-2 rounded"
                    placeholder="Ingrese tipos de pagos disponibles"
                    required
                />
            </div>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
                <label className="block text-gray-700">D√≠as disponibles:</label>
                <input
                    type="text"
                    name="availableDays"
                    value={formData.availableDays || ""}
                    onChange={handleChange}
                    className="w-full border p-2 rounded"
                    placeholder="Ejemplo: Lunes a Viernes"
                />
            </div>
            <div>
                <label className="block text-gray-700">Horas disponibles:</label>
                <input
                    type="text"
                    name="availableHours"
                    value={formData.availableHours || ""}
                    onChange={handleChange}
                    className="w-full border p-2 rounded"
                    placeholder="Ejemplo: 8:00 AM - 6:00 PM"
                />
            </div>
        </div>

        <div>
            <label className="block text-gray-700">Redes sociales / P√°gina web:</label>
            <input
                type="url"
                name="website"
                value={formData.website || ""}
                onChange={handleChange}
                className="w-full border p-2 rounded"
                placeholder="Ingrese su p√°gina web o perfil social"
            />
        </div>
        
        <div>
            <label className="block text-gray-700">Subir im√°genes:</label>
            <input
                type="file"
                name="pictures"
                onChange={handleFileChange}
                multiple
                className="w-full border p-2 rounded"
            />
        </div>
    </>
);

export default CommonFields;
